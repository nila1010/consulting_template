---
import { Icon } from "astro-icon/components";
const { rows = "3", bgColor, cta, cardContent } = Astro.props;
---

<section class="full-width-grid">
  {
    cardContent.map((card) => (
      <article style={`--span-row:${rows}`} data-style={bgColor} class="flow-space card">
        <Icon name={card.iconPath} />
        <h3>{card.heading}</h3>
        <p>{card.text}</p>
        {cta === "true" && (
          <div>
            <a href="">{card.ctaText}</a>
            <Icon name="arrow" />
          </div>
        )}
      </article>
    ))
  }
</section>

<style>
  section {
    margin-block-start: 3rem;
    display: grid;
    grid: auto / auto-flow max(16rem, 29%);
    gap: 2rem;
    padding-inline: max(2rem, 50% - var(--content) / 2);
    overflow: auto;
    > * {
      grid-row: span var(--span-row, 3);
      display: grid;
      grid: subgrid / auto;
      gap: 0;
    }
  }
  [data-style="gray"] {
    background-color: #ebebeb;
  }
  [data-style="white"] {
    background-color: #fff;
  }

  article {
    --space: 1.38rem;
    border-radius: 1.25rem;
    padding: 2.25rem 1.44rem;
    div {
      inline-size: fit-content;
      display: flex;
      gap: 0.5rem;
      align-items: center;
    }

    div:hover {
      [data-icon="arrow"],
      a {
        color: var(--secondary-color-2);
      }
    }

    a {
      text-decoration: none;
      color: var(--secondary-color-1);
      font-size: var(--font-size-step-2);
      font-weight: var(--font-weight-step-1);
      line-height: var(--lineheight-step-3);
    }
    p,
    div {
      --space: 0.94rem;
    }
  }

  [data-icon] {
    width: 3.29863rem;
    height: 3.29863rem;
  }

  [data-icon="arrow"] {
    inline-size: 0.81675rem;
    block-size: 0.66825rem;
  }
</style>
